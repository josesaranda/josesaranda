name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  install-dependencies:
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm ci
      - name: Save dependencies cache
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

  build:
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: GH_TOKEN=${{secrets.GH_TOKEN}} npm run build --if-present

  test:
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: npm test

  deploy:
    strategy:
      matrix:
        node-version: [16.x]
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: deploy
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ${{ secrets.DIST_LOCAL }}
          remote: ${{ secrets.DIST_REMOTE }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          rmRemote: true
