---
import i18next, { t } from "i18next";
import "animate.css/animate.min.css";
---

<html lang={i18next.language}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="author" content="José Sánchez Aranda" />
    <meta name="description" content={t("site.description")} />
    <meta
      name="keywords"
      content="Software, Engineer, JavaScript, Typescript, Astro, Github"
    />
    <title>{t("site.title")}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="manifest" href="/manifest.json" />
    <link
      href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="overflow-y-hidden">
    <slot />
  </body>
  <style is:global>
    .font-montserrat {
      font-family: "Montserrat", sans-serif;
    }
    body,
    .font-lora {
      font-family: "Lora", serif;
    }
    body {
      background-image: url("/images/wallpaper.jpg");
      background-size: cover;
      background-position: center;
      background-attachment: fixed;
    }
    .animate-onvisible {
      scale: 0;
    }

    a svg,
    a svg path {
      fill: white;
    }

    a:hover svg,
    a:hover svg path {
      fill: #86efac;
      transition: all 0.5s ease-in-out;
    }
  </style>
  <script>
    const observerOptions = {
      root: document.querySelector("#scroll"),
      rootMargin: "0px",
      threshold: 0.1,
    };

    function intersectionCallback(intersectingEntries: any[]) {
      intersectingEntries.forEach((entry: any) => {
        if (
          entry.isIntersecting &&
          entry.intersectionRatio > observerOptions.threshold &&
          entry.target &&
          entry.target.classList
        ) {
          entry.target.classList.add("animate__animated", "animate__zoomIn");
        }
      });
    }

    document.addEventListener("DOMContentLoaded", function () {
      const observer = new IntersectionObserver(
        intersectionCallback,
        observerOptions
      );

      document.querySelectorAll(".animate__onvisible").forEach((element) => {
        observer.observe(element);
      });
    });
  </script>
</html>
