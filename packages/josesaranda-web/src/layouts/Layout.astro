---
import i18next, { t } from "i18next";
import { HeadHrefLangs } from "astro-i18next/components";

import "@habitatcss/main.scss";
import "@habitatcss/variables.scss";
import "@habitatcss/fonts.scss";
import "@habitatcss/spacing.scss";
import "@habitatcss/links.scss";
import "@habitatcss/colors.scss";
import "@habitatcss/flex.scss";
import "@habitatcss/icon.scss";
import "@habitatcss/button.scss";
import "@habitatcss/border.scss";
import "@habitatcss/table.scss";
import "../theming/main.scss";

const { title, description, keywords } = Astro.props;
---

<!DOCTYPE html>
<html lang={i18next.language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta
      name="description"
      content={description ? description : t("site.description")}
    />
    {keywords && <meta name="keywords" content={keywords} />}
    <title>{title ? title : t("site.title")}</title>
    <script src="/scripts/echarts.min.js" is:inline></script>
    <script src="/scripts/view_transitions.js" is:inline></script>
    <meta name="view-transition" content="same-origin" />
    <HeadHrefLangs />
  </head>
  <body>
    <slot />
    <script>
      if ((document as any).startViewTransition) {
        (window as any).navigation.addEventListener("navigate", (event) => {
          const toUrl = new URL(event.destination.url);

          if (location.origin !== toUrl.origin) return;

          event.intercept({
            async handler() {
              const response = await fetch(toUrl.pathname);
              const text = await response.text();
              const [, data] = text.match(/<body>([\s\S]*)<\/body>/i) as any;
              (document as any).startViewTransition(() => {
                document.body.innerHTML = data;
                document.documentElement.scrollTop = 0;
              });
            },
          });
        });
      }
    </script>
  </body>
</html>
